#include <p18f4550.h>

// Configuration bits
#pragma config FOSC=HS   // High-speed external oscillator
#pragma config WDT=OFF   // Watchdog Timer Disabled
#pragma config LVP=OFF   // Low-Voltage Programming Disabled
#pragma config PBADEN=OFF // Port B A/D function disabled

// Define macros for switches and devices
#define lrbit PORTBbits.RB4  // SW0 interfaced to RB4
#define rlbit PORTBbits.RB5  // SW1 interfaced to RB5
#define buzzer PORTCbits.RC2 // Buzzer connected to RC2
#define relay PORTCbits.RC1  // Relay connected to RC1

// Function to create a delay (approximate)
void MsDelay (unsigned int time) {
    unsigned int i, j; 
    for (i = 0; i < time; i++) {
        for (j = 0; j < 275; j++);
    }
}

void main() {
    unsigned char val = 0; // Variable to store the state

    // Disable pull-ups on Port B (used for switches)
    INTCON2bits.RBPU = 0;

    // Configure ADC to digital mode
    ADCON1 = 0x0F;

    // Configure pins: 
    TRISBbits.TRISB4 = 1; // Set RB4 as input for SW0
    TRISBbits.TRISB5 = 1; // Set RB5 as input for SW1
    TRISCbits.TRISC1 = 0; // Set RC1 as output for relay
    TRISCbits.TRISC2 = 0; // Set RC2 as output for buzzer
    TRISD = 0x00; // Set PORTD as output for LEDs
    PORTD = 0x00; // Initialize PORTD to 0

    buzzer = 0; // Initialize buzzer to OFF
    relay = 0;  // Initialize relay to OFF

    while (1) {
        // Check if SW0 (connected to RB4) is pressed (low)
        if (!(lrbit)) {  
            val = 1; // Set value to 1 if SW0 is pressed
        }

        // Check if SW1 (connected to RB5) is pressed (low)
        if (!(rlbit)) {  
            val = 2; // Set value to 2 if SW1 is pressed
        }

        // If SW0 is pressed (val == 1)
        if (val == 1) {
            buzzer = 1;     // Turn on buzzer
            relay = 1;      // Turn on relay
            PORTD = PORTD >> 1; // Shift the LEDs to the right

            if (PORTD == 0x00) {
                PORTD = 0x80; // If all LEDs are off, reset to turn on the highest LED
            }

            MsDelay(250); // Delay for visual effect
        }

        // If SW1 is pressed (val == 2)
        if (val == 2) {
            buzzer = 0;     // Turn off buzzer
            relay = 0;      // Turn off relay
            PORTD = PORTD << 1; // Shift the LEDs to the left

            if (PORTD == 0x00) {
                PORTD = 0x01; // If all LEDs are off, reset to turn on the lowest LED
            }

            MsDelay(250); // Delay for visual effect
        }
    }
}
